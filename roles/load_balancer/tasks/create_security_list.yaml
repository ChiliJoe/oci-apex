---

# Use a jinja2 template of the ingress and egress security rules to generate
# a templated version of the final rules.
- name: create ingress rules yaml body
  template: src=./templates/lb_ingress_security_rules.yaml.j2 dest=/tmp/lb_ingress_security_rules.yaml
- name: create egress yaml body
  template: src=./templates/lb_egress_security_rules.yaml.j2 dest=/tmp/lb_egress_security_rules.yaml

# Load the variables defined in the generated files
- name: load the variables defined in the ingress rules yaml body
  include_vars: 
    file: /tmp/lb_ingress_security_rules.yaml
    name: loaded_ingress
    
- name: print loaded_ingress
  debug:
    msg: "loaded ingress is {{loaded_ingress}}"
    
- name: load the variables defined in the egress rules yaml body
  include_vars: 
    file: /tmp/lb_egress_security_rules.yaml
    name: loaded_egress
    
- name: print loaded_egress
  debug:
    msg: "loaded egress is {{loaded_egress}}"

- name: Create security list for bastion subnet
  oci_security_list:
    name: "{{ demo_lb_security_list_name }}"
    compartment_id: "{{ demo_compartment_ocid }}"
    vcn_id: '{{ demo_vcn_ocid }}'
    ingress_security_rules: "{{ loaded_ingress.lb_ingress_security_rules }}"
    egress_security_rules:  "{{ loaded_egress.lb_egress_security_rules }}"
  register: result

- set_fact:
    lb_security_list_ocid: "{{ result.security_list.id }}"
